# Whether or not rebase-merging is enabled on this repository.
# Defaults to `true`
rebaseMergeAllowed: false

# Whether or not squash-merging is enabled on this repository.
# Defaults to `true`
squashMergeAllowed: true

# Whether or not PRs are merged with a merge commit on this repository.
# Defaults to `false`
mergeCommitAllowed: false

# Automatically delete head branches after merging PRs.  Defaults to `true`.
deleteBranchOnMerge: true

# Rules for branch protection (add multiple entries to configure multiple branches)
branchProtectionRules:
# Identifies the protection rule pattern. Name of the branch to be protected.
# Defaults to `master`
- pattern: master
  # Will new commits pushed to matching branches dissmiss pull request review approvals.
  # Defaults to `false`
  dismissesStaleReviews: false
  # Can admins overwrite branch protection.
  # Defaults to `true`
  isAdminEnforced: true
  # Number of approving reviews required to update matching branches.
  # Defaults to `1`
  requiredApprovingReviewCount: 1
  # Are reviews from code owners required to update matching branches.
  # Defaults to `false`
  requiresCodeOwnerReviews: true
  # Require up to date branches
  requiresStrictStatusChecks: true
  # List of required status check contexts that must pass for commits to be accepted to matching branches.
  requiredStatusCheckContexts:
    - tests
  # Are commits required to be signed.
  # Defaults to `false`
  requiresCommitSignatures: false
  # Are status checks required to update matching branches.
  # Defaults to `true`
  requiresStatusChecks: true
  # Is pushing to matching branches restricted.
  # Defaults to `false`
  restrictPushes: false
  # Is dismissal of pull request reviews restricted.
  # Defaults to `false`
  restrictsReviewDismissals: false
  # Is linear history required for this branch.
  # Defaults to `true`
  requiresLinearHistory: true
